"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3162],{3023:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(3696);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}},6714:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"ruby/index","title":"Ruby","description":"macOS comes with Ruby installed, but as we don\'t want to be messing with operating system core files we\'re going to use the tools rbenv and ruby-build to manage and install our Ruby versions for our development environment.","source":"@site/docs/ruby/index.md","sourceDirName":"ruby","slug":"/ruby/","permalink":"/mac-setup/ruby/","draft":false,"unlisted":false,"editUrl":"https://github.com/sb2nov/mac-setup/tree/main/docs/ruby/index.md","tags":[],"version":"current","frontMatter":{"title":"Ruby"},"sidebar":"tutorialSidebar","previous":{"title":"Scala","permalink":"/mac-setup/scala"},"next":{"title":"RubyGems","permalink":"/mac-setup/ruby/rubygems"}}');var t=s(2540),o=s(3023);const r={title:"Ruby"},a=void 0,l={},c=[{value:"Installation",id:"installation",level:2},{value:"Switching versions",id:"switching-versions",level:2},{value:"Managing gems in application",id:"managing-gems-in-application",level:2},{value:"Configuration",id:"configuration",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.p,{children:["macOS comes with Ruby installed, but as we don't want to be messing with operating system core files we're going to use the tools ",(0,t.jsx)(n.code,{children:"rbenv"})," and ",(0,t.jsx)(n.code,{children:"ruby-build"})," to manage and install our Ruby versions for our development environment."]}),"\n",(0,t.jsx)(n.h2,{id:"installation",children:"Installation"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"brew install rbenv ruby-build rbenv-default-gems rbenv-gemset\necho 'eval \"$(rbenv init -)\"' >> ~/Projects/config/env.sh\nsource ~/.zshrc # Apply changes\n"})}),"\n",(0,t.jsx)(n.p,{children:"The packages we just installed allow us to install different versions of Ruby and specify which version to use on a per project basis and globally. This is very useful to keep a consistent development environment if you need to work in a particular Ruby version."}),"\n",(0,t.jsx)(n.h2,{id:"switching-versions",children:"Switching versions"}),"\n",(0,t.jsxs)(n.p,{children:["We can install version ",(0,t.jsx)(n.code,{children:"3.1.1"})," and use it as our global version by running:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"rbenv install 3.1.1\nrbenv global 3.1.1\n"})}),"\n",(0,t.jsxs)(n.p,{children:["On M1 Macs to install older version of Ruby eg. ",(0,t.jsx)(n.code,{children:"<2.7.3"}),", ",(0,t.jsx)(n.code,{children:"<2.6.7"})," you first need to run:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:'export optflags="-Wno-error=implicit-function-declaration"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"managing-gems-in-application",children:"Managing gems in application"}),"\n",(0,t.jsx)(n.p,{children:"Bundler provides a consistent environment for Ruby projects by tracking and installing the exact gems and versions that are needed."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"gem install bundler\necho 'bundler' >> \"$(brew --prefix rbenv)/default-gems\"\n"})}),"\n",(0,t.jsx)(n.p,{children:"When starting a Ruby project, you can have sandboxed collections of gems. This lets you have multiple collections of gems installed in different sandboxes, and specify (on a per-application basis) which sets of gems should be used. To have gems install into a sub-folder in your project directory for easy later removal / editing / testing, you can use a project gemset."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"echo '.gems' > <my_project_path>/.rbenv-gemsets\n"})}),"\n",(0,t.jsxs)(n.p,{children:["Your gems will then get installed in ",(0,t.jsx)(n.code,{children:"project/.gems"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"If you use Google for finding your Gem documentation then you might want to consider saving a bit of time when installing gems by not including the documentation."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-sh",children:"echo 'gem: --no-document' >> ~/.gemrc\n"})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);